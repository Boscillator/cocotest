def py3_test():
    """Performs Python3-specific tests."""
    def p1(x: int) -> int:
        return x+1
    def chain2(a, b):
        yield from a
        yield from b
    assert p1(2) == 3
    assert chain2((|1, 2|), (|3, 4|)) |> list == [1, 2, 3, 4]
    x = 5
    assert x == 5
    def set_x(y):
        nonlocal x
        x = y
    set_x(3)
    assert x == 3
    assert {x:x for x in range(5)} == {0:0, 1:1, 2:2, 3:3, 4:4}
    def head_tail(l):
        head, *tail = l
        return head, tail
    assert head_tail((|1, 2, 3|)) == (1, [2, 3])
    class metaA(type):
        def __instancecheck__(cls, inst):
            return True
    class A(metaclass=metaA): pass
    assert isinstance(A(), A)
    assert isinstance(A(), str)
    assert isinstance(A(), int)
